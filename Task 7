Question 1

import math

x = input ("Enter a value for D  :")
x = x.split(",")
r = []
for D in x:
    Q = (math.sqrt(2*50*int(D)/30))
    r.append(Q)
    print(Q)
    
----------------------------------

Question 2

l = int(input("Enter the value for l  :") ) 
class shape():
    def __init__(self):
        pass
    def area(self):
        return 0
class square(shape):
    def __init__(self, l):
        shape.__init__(self)
        self.length = l
    def area(self):
        return self.length*self.length

square = square(l)
print(square.area())
--------------------------------------

Question 3

-------------------------------

Question 4

class Test:
def __init__(self):
self.x = 0
class Derived_Test(Test):
def __init__(self):
self.y = 1
def main():
b = Derived_Test()
print(b.x,b.y)
main()

AttributeError: 'Derived_Test' object has no attribute ' x

class A:
    def __init__(self, x= 1):
        self.x = x
class der(A):
    def __init__(self,y = 2):
        super().__init__()
        self.y = y
    def main():
        obj = der()
        print(obj.x, obj.y)
main())

SyntaxError: invalid syntax


class A:
    def __init__(self,x):
        self.x = x
    def count(self,x):
        self.x = self.x+1
class B(A):
    def __init__(self, y=0):
        A.__init__(self, 3)
        self.y = y
    def count(self):
        self.y += 1
def main():
    obj = B()
    obj.count()
    print(obj.x, obj.y)
main()

Output : 3 1


class A:
    def __init__(self):
        self.multiply(15)
        print(self.i)
    def multiply(self, i):
        self.i = 4 * i;
class B(A):
    def __init__(self):
        super().__init__()
    def multiply(self, i):
        self.i = 2 * i;
obj = B()

Output  : 30
---------------------------------------------------------

Question 5

def seconds(time_str):
    a, b, c = time_str.split(":")
    return int(a)*60 + int(b) + int(c)/60
print(seconds("2:50:00"), "minutes")
print(seconds("1:20:00"), "minutes")
print(seconds("4:10:00"), "minutes")

--------------------------------------------

Question 6


